{"version":3,"sources":["components/Footer/style.module.scss","Data/Cities.ts","components/Cities/Cities.tsx","components/CityStorage/Component/StorageGood.tsx","components/CityStorage/CityStorage.tsx","components/Storage/Storage.tsx","components/Transportations/Transportations.tsx","components/Stats/Stats.tsx","components/Footer/Footer.tsx","components/App/App.tsx","index.js","components/Storage/style.module.scss","components/CityStorage/style.module.scss","components/Transportations/style.module.scss","components/Stats/style.module.scss"],"names":["module","exports","cities","id","city","Cities","props","className","map","c","href","currentCity","onClick","onChange","StorageGood","useState","qty","setQty","getPrice","good","priceStats","length","s","type","input","placeholder","value","maxLength","e","parseInt","target","onBuy","CitiyStorage","options","legend","display","maintainAspectRatio","responsive","tooltips","mode","intersect","caretSize","backgroundColor","bodyFontColor","borderColor","borderWidth","displayColors","callbacks","title","scales","yAxes","ticks","beginAtZero","gridLines","xAxes","chartStyle","position","height","width","storage","style","data","labels","datasets","label","fill","lineTension","borderCapStyle","pointBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Storage","targetCityId","setTargetCityId","findGoodById","goodId","goods","find","item","selectedGood","onSelectGood","Array","getEmptyCells","controls","onSell","currentTarget","onTransport","Transportations","getCityById","cityId","orders","order","targetCityID","days","disabled","Stats","stats","money","Footer","footer","year","github","rsSchool","App","setCurrentCity","setSelectedGood","storages","setStorages","maxStep","minPrice","maxPrice","cityStorages","setCityStorages","setMoney","setDays","transportOrders","setTransprotOrders","getStorageByCity","store","getRandomInt","max","Math","floor","random","sellGood","storagesNew","newMoney","index","findIndex","goodOnSellIndex","currentCityStorage","getGeneralCityStorage","goodIndex","pricesStatsLenght","price","removeGood","splice","lifeCycle","setInterval","newCityStorages","cityInd","goodInd","goodData","priceChangeSign","priceChangeValue","newPrice","slice","pop","i","updateCityStorages","oldOrders","newOrders","forEach","useEffect","push","createTransportOrder","getCityStorage","goodPrice","totalPrice","console","log","byuGoods","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbc4acc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"style_footer__swC6v\",\"year\":\"style_year__3SP4g\",\"rsSchool\":\"style_rsSchool__17yDz\",\"github\":\"style_github__3Yrih\"};","export const cities = [\r\n    {\r\n        id: 1,\r\n        city: 'Berlin'\r\n    },\r\n    {\r\n        id: 2,\r\n        city: 'Kazan'\r\n    },\r\n    {\r\n        id: 3,\r\n        city: 'Beirut'\r\n    }\r\n]","import \"./style.scss\"\r\n\r\nimport {cities} from \"../../Data/Cities\"\r\n\r\nfunction Cities(props:any) {\r\n    return (\r\n        <div className=\"cities-block\">\r\n            {cities.map(c => {\r\n                return (\r\n                    <a \r\n                        href=\"#\" \r\n                        className={`city ${props.currentCity === c.id ? 'active' : ''}`\r\n                        }\r\n                        onClick={() => {\r\n                            props.onChange(c.id)\r\n                        }}\r\n                    >\r\n                        {c.city}\r\n                    </a>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cities;","import s from \"../style.module.scss\"\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction StorageGood(props:any) {\r\n    let [qty, setQty] = useState(0);\r\n\r\n    function getPrice(good:any):number {\r\n        return good.priceStats[good.priceStats.length - 1];\r\n    };\r\n\r\n    return (\r\n        <div className={s['goods-input-box']}>\r\n          <div className={`${s['goods-box']} ${s[`goods-box-${props.good.id}`]}`} />\r\n          <p className={s['good-price']}>Price: {getPrice(props.good)}</p>\r\n          <input type=\"text\" \r\n            className={s.input} placeholder='quantity'\r\n            value={qty ? qty : 0}\r\n            maxLength={3}\r\n            onChange={(e):void => {\r\n              setQty(parseInt(e.target.value));\r\n            }}\r\n          />\r\n          <button className={s['input-button']}\r\n            onClick={():void => {\r\n              props.onBuy(props.good.id, qty, getPrice(props.good));\r\n              setQty(0);\r\n          }} >\r\n            Buy\r\n          </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StorageGood;","import s from \"./style.module.scss\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useState } from \"react\";\r\n\r\nimport StorageGood from \"./Component/StorageGood\"\r\n\r\nfunction CitiyStorage(props:any) {\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      caretSize: 3,\r\n\r\n      backgroundColor: \"rgba(134,36,36,.2)\",\r\n      bodyFontColor: \"rgb(134, 36, 36)\",\r\n      borderColor: \"#877f72\",\r\n      borderWidth: 1,\r\n      displayColors: false,\r\n\r\n      callbacks: {\r\n        title() {\r\n          return 0;\r\n        },\r\n      },\r\n    },\r\n\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: false,\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  function getGoodData(priceStats:object):object {\r\n      return {\r\n        labels: ['', '', '', '', '', '', '', ''],\r\n        datasets: [\r\n          {\r\n            label: 'Price',\r\n            fill: false,\r\n            lineTension: .3,\r\n            backgroundColor: 'rgb(255,99,132)',\r\n            borderColor: 'rgba(255, 102, 0, .5)',\r\n            borderCapStyle: 'butt',\r\n            pointBorderColor: 'rgb(204, 0, 51)',\r\n            pointBorderWidth: 2,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(224, 48, 48, 1)',\r\n            pointHoverBorderColor: 'rgb(224, 48, 20)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: priceStats,\r\n          }\r\n        ]\r\n      }\r\n  }\r\n\r\n  const chartStyle:any = {\r\n    position: 'relative',\r\n    height: '95%',\r\n    width: '80%',\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Citiy storage</h3>\r\n      <div>\r\n        <div className={s['goods-list']}>\r\n          {props.storage.map((good:any) => {\r\n            return (\r\n              <div key={'good-' + good.id} className={s['goods-box-wrapper']}>\r\n                <StorageGood good={good} onBuy={props.onBuy}/>\r\n                <div className={s['goods-box-stats'] + 'chart-container'} style={chartStyle}>\r\n                  <Line data={getGoodData(good.priceStats)} options={options}/>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CitiyStorage;","import { useState } from \"react\";\r\nimport s from \"./style.module.scss\";\r\n\r\nfunction Storage(props:any) {\r\n    const [qty, setQty] = useState(0);\r\n    const [targetCityId, setTargetCityId] = useState(1);\r\n\r\n    function getEmptyCells() {\r\n        if (props.storage.length < 8) {\r\n            return Array(8 - props.storage.length).fill(0).map(() => {\r\n                return <li\r\n                    className={`${s['goods-box']} ${s['goods-box-empty']}`}></li>;\r\n            });\r\n        }\r\n    }\r\n\r\n    function findGoodById(goodId:number):string {\r\n        return props.goods.find((item:any) => {\r\n            return item.id === goodId;\r\n        }).title;\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className={s.storage}>My storage</h3>\r\n        \r\n            <ul className={s['goods-list']}>\r\n                {props.storage.map((item:any) => {\r\n                    return (\r\n                        <> \r\n                            <li key={'storage-good-' + item.id} className=\r\n                                {`${s['goods-box']} ${s[`goods-box-${item.id}`]}\r\n                                ${props.selectedGood === item.id ? `${s['selected-box']}` : ''}`}\r\n                                onClick={():void => {\r\n                                    props.onSelectGood(item.id);\r\n                                }}\r\n                            >\r\n                                 <div className={s['goods-title']}>\r\n                                    {findGoodById(item.id)}, {item.qty} шт.\r\n                                 </div>\r\n                            </li>\r\n                        </>\r\n                    );\r\n                })}\r\n\r\n                { getEmptyCells() }\r\n            </ul>\r\n\r\n            {props.selectedGood ? (\r\n                <div className={s['sell-panel']}>\r\n                    <div className={s['selected-good']}>\r\n                        {findGoodById(props.selectedGood)}\r\n                    </div>\r\n                    <div className={s.controls}>\r\n                        <input maxLength={3}\r\n                            type=\"text\" \r\n                            className={s.input} placeholder='quantity'\r\n                            value={qty ? qty : 0}\r\n                            onChange={(e):void => {\r\n                                setQty(parseInt(e.target.value));\r\n                            }}\r\n                        />\r\n                        <button className={s['input-button']}\r\n                            onClick={():void => {\r\n                                props.onSell(props.selectedGood, qty);\r\n                            }}\r\n                        >\r\n                            Sell\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : ('')}\r\n\r\n            <>\r\n            <div className={s['ship-panel']}>\r\n                    <div className={s['select-controls']}>\r\n                        <select className={s['select-city']}\r\n                            value={targetCityId} onChange={(e) => {\r\n                                setTargetCityId(parseInt(e.currentTarget.value, 10));\r\n                        }}>\r\n                            <option value={1} >Berlin</option>\r\n                            <option value={2} >Kazan</option>\r\n                            <option value={3} >Beirut</option>\r\n                        </select>\r\n                        <button className={s['select-button']}\r\n                            onClick={():void => {\r\n                                props.onTransport(targetCityId)\r\n                            }}\r\n                        >\r\n                            Ship\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Storage;","import s from \"./style.module.scss\";\r\n\r\nimport { cities } from \"../../Data/Cities\"\r\n\r\nfunction Transportations(props:any) {\r\n    function findGoodById(goodId:number):string {\r\n        return props.goods.find((item:any) => {\r\n            return item.id === goodId;\r\n        }).title;\r\n    }\r\n\r\n    function getCityById(cityId:number) {\r\n        return cities.find((city:any) => {\r\n            return (city.id === cityId);\r\n        })!.city\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Shipping</h3>\r\n                {props.orders.map((order:any) => {\r\n                    return (\r\n                        <div className={s['transported-goods-wrapper']}>\r\n\r\n                            <div className={`${s['goods-box']} ${s[`goods-box-${order.goodId}`]}`}></div>\r\n                            <div className={s['good-and-move-to']}>\r\n                                <div className={s['from-to-town']}>\r\n                                    {getCityById(order.currentCity) + '->' + getCityById(order.targetCityID)}\r\n                                </div>\r\n                            </div>\r\n                            <div className={s['to-ship']}>\r\n                                <div className={s.days}>{order.days}</div>\r\n                                <button className={s['to-ship-btn']} disabled={order.days ? true : false}>Get</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Transportations;","import s from \"./style.module.scss\";\r\n\r\nfunction Stats(props:any) {\r\n    return (\r\n        <>\r\n            <h3>Stats</h3>\r\n\r\n            <div className={s.stats}>\r\n                <div className={s['stats-money']}>\r\n                    <div className={s['money-icon']}></div>\r\n                    <div className={s.money}>\r\n                        {`: ` + props.money}\r\n                    </div>\r\n                </div>\r\n                <div className={s.days}>\r\n                    Days: {props.days}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Stats;","import s from \"./style.module.scss\"\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <div className={s.footer}>\r\n            <div className={s.year}>by Alek_Rind 2021</div>\r\n            <a className={`${s.github}`} href=\"https://github.com/AlekRing\">\r\n                <div />\r\n            </a>\r\n            <a className={s.rsSchool} href=\"https://rs.school/\"></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {useEffect, useState} from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport Cities from \"../Cities/Cities\"\r\nimport CitiyStorage from \"../CityStorage/CityStorage\"\r\nimport Storage from \"../Storage/Storage\"\r\nimport Transportations from \"../Transportations/Transportations\"\r\nimport Stats from \"../Stats/Stats\"\r\nimport Footer from \"../Footer/Footer\"\r\n\r\n\r\nfunction App() {\r\n    const [currentCity, setCurrentCity] = useState(1);\r\n\r\n    const [selectedGood, setSelectedGood] = useState(1)\r\n    const [storages, setStorages] = useState([\r\n        {\r\n            cityId: 1,\r\n            storage: [\r\n                {\r\n                    id: 1,\r\n                    qty: 10,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    qty: 20,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    qty: 5,\r\n                },\r\n                {\r\n                    id: 4,\r\n                    qty: 15,\r\n                },\r\n                {\r\n                    id: 5,\r\n                    qty: 55,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            cityId: 2,\r\n            storage: [\r\n                {\r\n                    id: 1,\r\n                    qty: 5,\r\n                },\r\n                {\r\n                    id: 6,\r\n                    qty: 15,\r\n                },\r\n                {\r\n                    id: 7,\r\n                    qty: 55,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            cityId: 3,\r\n            storage: [\r\n                {\r\n                    id: 8,\r\n                    qty: 5,\r\n                },\r\n            ],\r\n        }\r\n    ]);\r\n\r\n    const [cityStorages, setCityStorages] = useState([\r\n        {\r\n            city: 'Berlin',\r\n            cityId: 1,\r\n            storage: [\r\n                {\r\n                    id: 2,\r\n                    priceStats: [50, 75, 54, 66, 73, 90, 59],\r\n                    maxStep: 10,\r\n                    minPrice: 30,\r\n                    maxPrice: 100,\r\n                },\r\n                {\r\n                    id: 7,\r\n                    priceStats: [85, 96, 82, 101, 102, 89, 93],\r\n                    maxStep: 8,\r\n                    minPrice: 84,\r\n                    maxPrice: 103,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            city: 'Kazan',\r\n            cityId: 2,\r\n            storage: [\r\n                {\r\n                    id: 1,\r\n                    priceStats: [12, 21, 10, 22, 15, 19, 14],\r\n                    maxStep: 5,\r\n                    minPrice: 10,\r\n                    maxPrice: 54,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    priceStats: [21, 16, 19, 22, 21, 18, 28],\r\n                    maxStep: 7,\r\n                    minPrice: 11,\r\n                    maxPrice: 42,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            city: 'Beirut',\r\n            cityId: 3,\r\n            storage: [\r\n                {\r\n                    id: 8,\r\n                    priceStats: [111, 160, 119, 122, 121, 118, 128],\r\n                    maxStep: 25,\r\n                    minPrice: 100,\r\n                    maxPrice: 175,\r\n                },\r\n            ],\r\n        }\r\n    ]);\r\n\r\n    const goods = [\r\n        {\r\n            id: 1,\r\n            title: \"Mushrooms\",\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Wood\",\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Milk\",\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Seeds\",\r\n        },\r\n        {\r\n            id: 5,\r\n            title: \"Vegetables\",\r\n        },\r\n        {\r\n            id: 6,\r\n            title: \"Stone\",\r\n        },\r\n        {\r\n            id: 7,\r\n            title: \"Tools\",\r\n        },\r\n        {\r\n            id: 8,\r\n            title: \"gold\",\r\n        },\r\n    ]\r\n\r\n    const [money, setMoney] = useState(1000)\r\n    const [days, setDays] = useState(1)\r\n\r\n    const [transportOrders, setTransprotOrders] = useState([])\r\n\r\n    function getStorageByCity():object[] {\r\n        const store = storages.find((storage) => {\r\n            return storage.cityId === currentCity;\r\n        });\r\n\r\n        if (store) return store.storage\r\n        return []\r\n    }\r\n\r\n    function getGeneralCityStorage() {\r\n        const store = cityStorages.find((storage) => {\r\n            return storage.cityId === currentCity;\r\n        });\r\n\r\n        if (store) return store.storage\r\n        return []\r\n    }\r\n\r\n    function getRandomInt(max:number):number {\r\n        return Math.floor(Math.random() * Math.floor(max))\r\n    }\r\n\r\n    function updateCityStorages():void {\r\n        const newCityStorages:any = cityStorages;\r\n\r\n        for (let cityInd = 0; cityInd < newCityStorages.length; cityInd++) {\r\n            const storage = newCityStorages[cityInd].storage;\r\n\r\n            for (let goodInd = 0; goodInd < storage.length; goodInd++) {\r\n                const goodData = storage[goodInd]; // id, price... \r\n                const priceChangeSign = getRandomInt(2) ? 1 : -1;\r\n                const priceChangeValue = getRandomInt(goodData.maxStep)  * priceChangeSign;\r\n                \r\n                let newPrice = goodData.priceStats.slice(-1).pop()!\r\n                    + priceChangeValue;\r\n\r\n                if (newPrice > goodData.maxPrice) newPrice = goodData.maxPrice\r\n                if (newPrice < goodData.minPrice) newPrice = goodData.minPrice\r\n                    \r\n                for (let i = 0; i < goodData.priceStats.length - 1; i++) {\r\n                    goodData.priceStats[i] = goodData.priceStats[i + 1]\r\n                }\r\n\r\n                goodData.priceStats[goodData.priceStats.length - 1] = newPrice;\r\n\r\n                newCityStorages[cityInd][goodInd] = goodData;\r\n            }\r\n        }\r\n\r\n        setCityStorages(newCityStorages);\r\n    }\r\n\r\n    function sellGood(goodId:number, qty:number):void {\r\n        if (qty < 0) return\r\n        \r\n        const storagesNew = storages;\r\n        let newMoney:number = money;\r\n\r\n        const index:number = storagesNew.findIndex(storage =>\r\n        storage.cityId === currentCity);\r\n        \r\n        if (index > -1) {\r\n            const goodOnSellIndex:number = storagesNew[index].storage.findIndex(good => {\r\n              return  good.id === goodId\r\n            });\r\n\r\n            if (goodOnSellIndex > -1) {\r\n                const currentCityStorage = getGeneralCityStorage();\r\n\r\n                const goodIndex:number = currentCityStorage.findIndex((good) => {\r\n                    return good.id === goodId;\r\n                });\r\n\r\n                if (goodIndex > -1) {\r\n                    const pricesStatsLenght = currentCityStorage[goodIndex].priceStats.length\r\n                    \r\n                    const price:number = currentCityStorage[goodIndex]\r\n                        .priceStats[pricesStatsLenght - 1];\r\n\r\n                    if (storagesNew[index].storage[goodOnSellIndex].qty >= qty) {\r\n                        storagesNew[index].storage[goodOnSellIndex].qty -= qty;\r\n                        newMoney += qty * price;\r\n    \r\n                        if (storagesNew[index].storage[goodOnSellIndex].qty === 0) {\r\n                            removeGood(storagesNew[index].storage[goodOnSellIndex].id)\r\n                        }\r\n                        setMoney(newMoney);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setStorages(storagesNew);\r\n    }\r\n\r\n    function byuGoods(goodId:number, qty:number, goodPrice:number):void {\r\n        const totalPrice = qty * goodPrice;\r\n\r\n        console.log(totalPrice)\r\n\r\n        if (money < totalPrice) return;\r\n\r\n        const storagesNew = storages;\r\n        const index:number = storagesNew.findIndex(storage =>\r\n            storage.cityId === currentCity);\r\n        \r\n        if (index > -1) {\r\n            const goodOnSellIndex:number = storagesNew[index].storage.findIndex(good =>\r\n                good.id === goodId);\r\n\r\n            if (goodOnSellIndex > -1) {\r\n                storagesNew[index].storage[goodOnSellIndex].qty += qty;\r\n            } else {\r\n                storagesNew[index].storage.push({\r\n                    id: goodId,\r\n                    qty: qty\r\n                })\r\n            }\r\n        }\r\n\r\n        setStorages(storagesNew);\r\n        setMoney(money - totalPrice);\r\n    }\r\n\r\n    function getCityStorage() {\r\n        const store = cityStorages.find(storage =>\r\n            storage.cityId === currentCity\r\n        );\r\n\r\n        if (store) return store.storage\r\n        return []\r\n    }\r\n\r\n    function removeGood(goodId:number) {\r\n        const storagesNew = storages;\r\n\r\n        const index:number = storagesNew.findIndex(storage =>\r\n            storage.cityId === currentCity);\r\n        \r\n        if (index > -1) {\r\n            const goodOnSellIndex:number = storagesNew[index].storage.findIndex(good => {\r\n              return  good.id === goodId\r\n            });\r\n\r\n            if (goodOnSellIndex > -1) {\r\n                storagesNew[index].storage.splice(goodId, 1)\r\n            }\r\n        }\r\n\r\n        setStorages(storagesNew);\r\n    }\r\n\r\n    function createTransportOrder(targetCityID:number) {\r\n        const newOrders:any = [...transportOrders];\r\n\r\n        const storage:any = getStorageByCity();\r\n        const goodInd = storage.findIndex((good:any) => good.id === selectedGood)\r\n\r\n        if (goodInd < 0) return;\r\n\r\n        newOrders.push({\r\n            currentCity: currentCity,\r\n            targetCityID,\r\n            goodId: selectedGood,\r\n            qty: storage[goodInd].qty,\r\n            days: 16\r\n        });\r\n\r\n        removeGood(selectedGood);\r\n        setTransprotOrders(newOrders);\r\n    }\r\n\r\n    function updateTransportationDays() {\r\n        setTransprotOrders((oldOrders:object[]) => {\r\n            const newOrders:any = [...oldOrders];\r\n\r\n            newOrders.forEach((orders:any, i:number) => {\r\n                if (orders.days >= 1) orders.days -= 1;\r\n            });\r\n\r\n            return newOrders;\r\n        });\r\n    }\r\n\r\n    function lifeCycle() {\r\n        setInterval(() => {\r\n            updateCityStorages();\r\n            updateTransportationDays();\r\n            setDays((days) => days + 1);\r\n        }, 5000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        lifeCycle();\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"app\">\r\n            <h1 className=\"app-name\">\r\n                Greatest Seller\r\n            </h1>\r\n\r\n            <Cities \r\n                currentCity={currentCity}\r\n                onChange={(city:number):void => {\r\n                    setCurrentCity(city);\r\n                }}\r\n            />\r\n\r\n            <div className=\"content\">\r\n                <div className=\"column-left\">\r\n                    <div className=\"storage\">\r\n                        <Storage\r\n                            currentCity={currentCity}\r\n                            storage={getStorageByCity()}\r\n                            selectedGood={selectedGood}\r\n                            goods={goods}\r\n                            onSelectGood={(goodId:number):void => {\r\n                                setSelectedGood(goodId)\r\n                            }}\r\n                            onSell={(goodId:number, qty:number) => {\r\n                                sellGood(goodId, qty);\r\n                            }}\r\n                            onTransport={(targetCityID:number) => {\r\n                                createTransportOrder(targetCityID)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"transportations\">\r\n                        <Transportations orders={transportOrders} goods={goods}/>\r\n                    </div>\r\n                    <div className=\"stats\">\r\n                        <Stats days={days} money={money}/>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"column-right\">\r\n                    <div className=\"city-storage\">\r\n                        <CitiyStorage storage={getCityStorage()} onBuy={(goodId:number, qty:number, goodPrice:number) => {\r\n                            byuGoods(goodId, qty, goodPrice);\r\n                        }}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.tsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"storage\":\"style_storage__7l_Xv\",\"goods-list\":\"style_goods-list__Up8I4\",\"goods-box\":\"style_goods-box__2tT-A\",\"goods-box-empty\":\"style_goods-box-empty__gPdsx\",\"goods-box-1\":\"style_goods-box-1__1QkOZ\",\"goods-box-2\":\"style_goods-box-2__n0rRC\",\"goods-box-3\":\"style_goods-box-3__3c7-2\",\"goods-box-4\":\"style_goods-box-4__3F2G1\",\"goods-box-5\":\"style_goods-box-5__3lL_N\",\"goods-box-6\":\"style_goods-box-6__1K4ru\",\"goods-box-7\":\"style_goods-box-7__3r2IA\",\"goods-box-8\":\"style_goods-box-8__1pyEd\",\"goods-title\":\"style_goods-title__3z0wW\",\"selected-box\":\"style_selected-box__1ZFfU\",\"sell-panel\":\"style_sell-panel__1ryXh\",\"controls\":\"style_controls__V5Ly8\",\"ship-panel\":\"style_ship-panel__2cp7u\",\"select-controls\":\"style_select-controls__2moqZ\",\"selected-good\":\"style_selected-good__3JwQi\",\"select-button\":\"style_select-button__3_Ump\",\"select-city\":\"style_select-city__2XhdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goods-list\":\"style_goods-list__g-dfn\",\"goods-box\":\"style_goods-box__3vLIs\",\"goods-box-1\":\"style_goods-box-1__3tDAD\",\"goods-box-2\":\"style_goods-box-2__3HbEH\",\"goods-box-3\":\"style_goods-box-3__1kfwA\",\"goods-box-4\":\"style_goods-box-4__2q4f0\",\"goods-box-5\":\"style_goods-box-5__1yb39\",\"goods-box-6\":\"style_goods-box-6__1_dL5\",\"goods-box-7\":\"style_goods-box-7__Da1Xh\",\"goods-box-8\":\"style_goods-box-8__oQh4u\",\"goods-box-wrapper\":\"style_goods-box-wrapper__jUbwy\",\"goods-box-stats\":\"style_goods-box-stats__frl56\",\"input\":\"style_input__1fXf-\",\"good-price\":\"style_good-price__38Cjp\",\"goods-input-box\":\"style_goods-input-box__JMqDy\",\"input-button\":\"style_input-button__1mzGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transported-goods-wrapper\":\"style_transported-goods-wrapper__2ocKk\",\"days\":\"style_days__3qT_a\",\"goods-box\":\"style_goods-box__1HZo0\",\"goods-box-1\":\"style_goods-box-1__UYk4s\",\"goods-box-2\":\"style_goods-box-2__1-9ZO\",\"goods-box-3\":\"style_goods-box-3__1PIYY\",\"goods-box-4\":\"style_goods-box-4__nUjca\",\"goods-box-5\":\"style_goods-box-5__1wSBl\",\"goods-box-6\":\"style_goods-box-6__17So1\",\"goods-box-7\":\"style_goods-box-7__2L4g4\",\"goods-box-8\":\"style_goods-box-8__1vvfb\",\"from-to-town\":\"style_from-to-town__1yYQ9\",\"to-ship\":\"style_to-ship__2CVmu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"style_stats__1NIGI\",\"stats-money\":\"style_stats-money__tNzQg\",\"money-icon\":\"style_money-icon__1sdgm\"};"],"sourceRoot":""}